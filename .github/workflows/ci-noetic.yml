name: CI-Noetic

on: [push, pull_request]

env:
  ADDITIONAL_DEBS: "clang-tidy libclang-dev"
  CMAKE_ARGS: "-DCATKIN_ENABLE_CLANG_TIDY=true"
  ROS_DISTRO: noetic

jobs:
  testing-repo:
    name: "Build + Test with Testing Repo of noetic (http://packages.ros.org/ros-testing/ubuntu)"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: testing

  main-repo:
    name: "Build + Test with Main Repo of noetic (http://packages.ros.org/ros/ubuntu)"
    runs-on: ubuntu-20.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v1
      - uses: 'ros-industrial/industrial_ci@master'
        env:
          ROS_REPO: main

  codecov:
    name: "Upload job to codecov"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'agutenkunst/industrial_ci@pr-coverage'
        env:
          ROS_REPO: testing
          CODE_COVERAGE: "codecov.io"
          CODE_COVERAGE_EXCLUDES: "*/src/func_not_covered.cpp"
      - uses: codecov/codecov-action@v1

  coveralls:
    name: "Upload job to coveralls"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: 'agutenkunst/industrial_ci@pr-coverage'
        env:
          ROS_REPO: testing
          CODE_COVERAGE: "coveralls.io"
          CODE_COVERAGE_EXCLUDES: "*/src/func_not_covered.cpp"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_SERVICE_NAME: github
          BUILDER: catkin_make